// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// nonstat_vecchia_Linv_col
arma::cube nonstat_vecchia_Linv_col(arma::mat log_range, arma::mat locs, arma::mat NNarray, int num_threads, double smoothness, bool compute_derivative);
RcppExport SEXP _GeoNonStat_nonstat_vecchia_Linv_col(SEXP log_rangeSEXP, SEXP locsSEXP, SEXP NNarraySEXP, SEXP num_threadsSEXP, SEXP smoothnessSEXP, SEXP compute_derivativeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type log_range(log_rangeSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type NNarray(NNarraySEXP);
    Rcpp::traits::input_parameter< int >::type num_threads(num_threadsSEXP);
    Rcpp::traits::input_parameter< double >::type smoothness(smoothnessSEXP);
    Rcpp::traits::input_parameter< bool >::type compute_derivative(compute_derivativeSEXP);
    rcpp_result_gen = Rcpp::wrap(nonstat_vecchia_Linv_col(log_range, locs, NNarray, num_threads, smoothness, compute_derivative));
    return rcpp_result_gen;
END_RCPP
}
// log_determinant_derivative
arma::vec log_determinant_derivative(arma::cube derivative, arma::mat compressed_sparse_chol, Rcpp::IntegerMatrix NNarray);
RcppExport SEXP _GeoNonStat_log_determinant_derivative(SEXP derivativeSEXP, SEXP compressed_sparse_cholSEXP, SEXP NNarraySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type derivative(derivativeSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type compressed_sparse_chol(compressed_sparse_cholSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type NNarray(NNarraySEXP);
    rcpp_result_gen = Rcpp::wrap(log_determinant_derivative(derivative, compressed_sparse_chol, NNarray));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_GeoNonStat_nonstat_vecchia_Linv_col", (DL_FUNC) &_GeoNonStat_nonstat_vecchia_Linv_col, 6},
    {"_GeoNonStat_log_determinant_derivative", (DL_FUNC) &_GeoNonStat_log_determinant_derivative, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_GeoNonStat(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
