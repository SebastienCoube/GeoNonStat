% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GeoNonStat.R
\name{process_covariates}
\alias{process_covariates}
\title{process_covariates : pre-processes covariates by adding an intercept,
creating useful indices, and pre-computing useful matrices and vectors}
\usage{
process_covariates(
  X,
  vecchia_approx,
  PP = NULL,
  covariate_name = "<missing covariate name>",
  one_obs_per_site = F
)
}
\arguments{
\item{X}{a data.frame with as many rows as vecchia_approx$observed_locs}

\item{vecchia_approx}{TODO}

\item{PP}{NULL,}

\item{covariate_name}{"<missing covariate name>",}

\item{one_obs_per_site}{= F}
}
\value{
a list
}
\description{
process_covariates : pre-processes covariates by adding an intercept,
creating useful indices, and pre-computing useful matrices and vectors
}
\examples{
\dontrun{TODO}
nlocs = 5000
nobs = 10000
unique_locs = cbind(runif(nlocs), runif(nlocs))
observed_locs = unique_locs[as.numeric(cut(runif(nobs), seq(0, 1, length.out = nlocs))),]
X = as.data.frame(cbind(runif(nobs), rnorm(nobs), rpois(nobs, 5)))
vecchia_approx = createVecchia(observed_locs, 12)
PP = createPP(vecchia_approx)

# Good cases ######################
# no PP, an X
res = process_covariates(X = X, vecchia_approx, PP = NULL, covariate_name = "test_covariate", one_obs_per_site = F)
# no PP, no X
res = process_covariates(X = NULL, vecchia_approx, PP = NULL, covariate_name = "test_covariate", one_obs_per_site = F)
# PP and X
res = process_covariates(X = X, vecchia_approx, PP = PP, covariate_name = "test_covariate", one_obs_per_site = F)
# one obs of x per loc
X = as.data.frame(cbind(observed_locs, observed_locs[,1]^2+ observed_locs[,2]^2))
res = process_covariates(X = X, vecchia_approx, PP = NULL, covariate_name = "test_covariate", one_obs_per_site = T)

# Errors ##########################
# one obs of x per loc
X = as.data.frame(cbind(runif(nobs), rnorm(nobs), rpois(nobs, 5)))
res = process_covariates(X = X, vecchia_approx, PP = NULL, covariate_name = "test_covariate", one_obs_per_site = T)
# bad X number of rows
X = X[-1,]
res = process_covariates(X = X, vecchia_approx, PP = NULL, covariate_name = "test_covariate", one_obs_per_site = T)
# bad X format
X = (cbind(runif(nobs), rnorm(nobs), rpois(nobs, 5)))
res = process_covariates(X = X, vecchia_approx, PP = NULL, covariate_name = "test_covariate", one_obs_per_site = T)
# not independent covariates
X = as.data.frame(cbind(observed_locs, observed_locs, observed_locs[,1]^2+ observed_locs[,2]^2))
res = process_covariates(X = X, vecchia_approx, PP = NULL, covariate_name = "test_covariate", one_obs_per_site = T)
}
